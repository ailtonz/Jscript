###
###
###
### Category1 : Storage
### Category2 : Disk Drives and Volumes
### Category3 : Physical and Logical Disks
### Description : Retrieves information about mapped network drives. The information returned is similar to that available through the Win32_LogicalDisk class, which retrieves information about the logical disks found on a computer.
###
###
###
var wbemFlagReturnImmediately = 0x10;
var wbemFlagForwardOnly = 0x20;

   var objWMIService = GetObject("winmgmts:\\\\.\\root\\CIMV2");
   var colItems = objWMIService.ExecQuery("SELECT * FROM Win32_MappedLogicalDisk", "WQL",
                                          wbemFlagReturnImmediately | wbemFlagForwardOnly);

   var enumItems = new Enumerator(colItems);
   for (; !enumItems.atEnd(); enumItems.moveNext()) {
      var objItem = enumItems.item();

      WScript.Echo("Access: " + objItem.Access);
      WScript.Echo("Availability: " + objItem.Availability);
      WScript.Echo("Block Size: " + objItem.BlockSize);
      WScript.Echo("Caption: " + objItem.Caption);
      WScript.Echo("Compressed: " + objItem.Compressed);
      WScript.Echo("Config Manager Error Code: " + objItem.ConfigManagerErrorCode);
      WScript.Echo("Config Manager User Config: " + objItem.ConfigManagerUserConfig);
      WScript.Echo("Creation Class Name: " + objItem.CreationClassName);
      WScript.Echo("Description: " + objItem.Description);
      WScript.Echo("Device ID: " + objItem.DeviceID);
      WScript.Echo("Error Cleared: " + objItem.ErrorCleared);
      WScript.Echo("Error Description: " + objItem.ErrorDescription);
      WScript.Echo("Error Methodology: " + objItem.ErrorMethodology);
      WScript.Echo("File System: " + objItem.FileSystem);
      WScript.Echo("Free Space: " + objItem.FreeSpace);
      WScript.Echo("Install Date: " + objItem.InstallDate);
      WScript.Echo("Last Error Code: " + objItem.LastErrorCode);
      WScript.Echo("Maximum Component Length: " + objItem.MaximumComponentLength);
      WScript.Echo("Name: " + objItem.Name);
      WScript.Echo("Number Of Blocks: " + objItem.NumberOfBlocks);
      WScript.Echo("PNP Device ID: " + objItem.PNPDeviceID);
      try { WScript.Echo("Power Management Capabilities: " + 
         (objItem.PowerManagementCapabilities.toArray()).join(",")); }
         catch(e) { WScript.Echo("Power Management Capabilities: null"); }
      WScript.Echo("Power Management Supported: " + objItem.PowerManagementSupported);
      WScript.Echo("Provider Name: " + objItem.ProviderName);
      WScript.Echo("Purpose: " + objItem.Purpose);
      WScript.Echo("Quotas Disabled: " + objItem.QuotasDisabled);
      WScript.Echo("Quotas Incomplete: " + objItem.QuotasIncomplete);
      WScript.Echo("Quotas Rebuilding: " + objItem.QuotasRebuilding);
      WScript.Echo("Session ID: " + objItem.SessionID);
      WScript.Echo("Size: " + objItem.Size);
      WScript.Echo("Status: " + objItem.Status);
      WScript.Echo("Status Info: " + objItem.StatusInfo);
      WScript.Echo("Supports Disk Quotas: " + objItem.SupportsDiskQuotas);
      WScript.Echo("Supports File-Based Compression: " + objItem.SupportsFileBasedCompression);
      WScript.Echo("System Creation Class Name: " + objItem.SystemCreationClassName);
      WScript.Echo("System Name: " + objItem.SystemName);
      WScript.Echo("Volume Name: " + objItem.VolumeName);
      WScript.Echo("Volume Serial Number: " + objItem.VolumeSerialNumber);
      WScript.Echo();
   }
